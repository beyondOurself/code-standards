import{b as c,o as u,c as r,a as n,e as a,w as p,F as i,g as s,h as l}from"./app.ba3fd69d.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const b={},m=n("h1",{id:"javascript-\u89C4\u8303",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript-\u89C4\u8303","aria-hidden":"true"},"#"),s(" JavaScript \u89C4\u8303")],-1),d=n("blockquote",null,[n("p",null,"\u963F\u91CC\u524D\u7AEF\u5F00\u53D1\u624B\u518C: \u4EAC\u4E1C\u51F9\u51F8\u5B9E\u9A8C\u5BA4\u524D\u7AEF\u5F00\u53D1\u89C4\u8303\uFF1B")],-1),g=n("h1",{id:"\u6982\u89C8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6982\u89C8","aria-hidden":"true"},"#"),s(" \u6982\u89C8 \u{1F4CB}")],-1),v={class:"table-of-contents"},y=s("\u7C7B\u578B"),f=s("\u5F15\u7528"),h=s("\u5BF9\u8C61"),w=s("\u6570\u7EC4"),j=s("\u89E3\u6784\u8D4B\u503C"),_=s("\u5B57\u7B26\u4E32"),x=s("\u51FD\u6570"),N=s("\u7BAD\u5934\u51FD\u6570"),P=s("\u539F\u56E0\uFF1A\u5B83\u5C06\u521B\u5EFA\u5728 this \u4E0A\u4E0B\u6587\u4E2D\u6267\u884C\u7684\u51FD\u6570\u7248\u672C\uFF0C\u901A\u5E38\u662F\u60A8\u60F3\u8981\u7684\uFF0C\u5E76\u4E14\u8BED\u6CD5\u66F4\u7B80\u6D01"),I=s("\u7C7B&\u6784\u9020\u51FD\u6570"),T=s("\u6A21\u5757"),A=s("\u8FED\u4EE3\u5668"),O=s("\u751F\u6210\u5668"),q=s("\u5BF9\u8C61\u5C5E\u6027"),E=s("\u53D8\u91CF\u58F0\u660E"),S=s("Hoisting"),C=s("\u6BD4\u8F83\u8FD0\u7B97\u7B26&\u76F8\u7B49"),F=s("\u5206\u53F7"),D=s("\u6807\u51C6\u7279\u6027"),B=s("eval()"),R=s("\u4FEE\u6539\u5185\u7F6E\u5BF9\u8C61\u7684\u539F\u578B"),U=s("\u547D\u540D"),$=s("\u65B9\u6CD5"),M=s("\u4EE3\u7801\u683C\u5F0F"),J=s("\u5B57\u7B26\u4E32"),L=s("\u5BF9\u8C61\u58F0\u660E"),Q=s("\u4F7F\u7528 ES6+"),V=s("\u62EC\u53F7"),z=s("undefined \u5224\u65AD"),H=s("\u6761\u4EF6\u5224\u65AD\u548C\u5FAA\u73AF\u6700\u591A\u4E09\u5C42"),W=s("this \u7684\u8F6C\u6362\u547D\u540D"),X=s("\u614E\u7528 console.log"),G=l(`<h1 id="\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u5185\u5BB9" aria-hidden="true">#</a> \u5185\u5BB9 \u{1F479}</h1><h2 id="\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B" aria-hidden="true">#</a> \u7C7B\u578B</h2><ul><li><p>\u539F\u59CB\u7C7B\u578B: \u5B58\u53D6\u539F\u59CB\u7C7B\u578B\u76F4\u63A5\u4F5C\u7528\u4E8E\u503C\u672C\u8EAB</p><ul><li>\u5E03\u5C14\u7C7B\u578B</li><li>Null \u7C7B\u578B</li><li>Undefined \u7C7B\u578B</li><li>\u6570\u5B57\u7C7B\u578B</li><li>BigInt \u7C7B\u578B</li><li>\u5B57\u7B26\u4E32\u7C7B\u578B</li><li>\u7B26\u53F7\u7C7B\u578B Symbol</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> foo

bar <span class="token operator">=</span> <span class="token number">9</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">)</span> <span class="token comment">// 1, 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p>\u590D\u6742\u7C7B\u578B: \u8BBF\u95EE\u590D\u6742\u7C7B\u578B\u4F5C\u7528\u4E8E\u503C\u7684\u5F15\u7528</p><ul><li>object</li><li>array</li><li>function</li><li>const foo = [1, 2, 3]</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bar <span class="token operator">=</span> foo

bar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">9</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 9, 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528" aria-hidden="true">#</a> \u5F15\u7528</h2><ul><li>\u8BF7\u8BB0\u5F97 const \u548C let \u90FD\u662F\u5757\u7EA7\u4F5C\u7528\u57DF\uFF0Cvar \u662F\u51FD\u6570\u7EA7\u4F5C\u7528\u57DF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// const and let only exist in the blocks they are defined in.</span>
<span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// ReferenceError</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// ReferenceError</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u5BF9\u6240\u6709\u5F15\u7528\u90FD\u4F7F\u7528 const\uFF0C\u4E0D\u8981\u4F7F\u7528 var eslint: eslint: prefer-const, no-const-assign</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u8FD9\u6837\u505A\u53EF\u4EE5\u786E\u4FDD\u4F60\u65E0\u6CD5\u91CD\u65B0\u5206\u914D\u5F15\u7528\uFF0C\u4EE5\u907F\u514D\u51FA\u73B0\u9519\u8BEF\u548C\u96BE\u4EE5\u7406\u89E3\u7684\u4EE3\u7801</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u5982\u679C\u5F15\u7528\u662F\u53EF\u53D8\u52A8\u7684\uFF0C\u4F7F\u7528 let \u4EE3\u66FF var\uFF0Ceslint: no-var</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1Alet \u662F\u5757\u7EA7\u4F5C\u7528\u57DF\u7684\uFF0C\u800C\u4E0D\u50CF var \u5C5E\u4E8E\u51FD\u6570\u7EA7\u4F5C\u7528\u57DF</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61" aria-hidden="true">#</a> \u5BF9\u8C61</h2><ul><li>\u8BF7\u4F7F\u7528\u5B57\u9762\u91CF\u503C\u521B\u5EFA\u5BF9\u8C61\uFF0Ceslint: no-new-object</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u522B\u4F7F\u7528\u4FDD\u7559\u5B57\u4F5C\u4E3A\u5BF9\u8C61\u7684\u952E\u503C\uFF0C\u8FD9\u6837\u5728 IE8 \u4E0B\u4E0D\u4F1A\u8FD0\u884C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment">// default \u662F\u4FDD\u7559\u5B57</span>
  <span class="token literal-property property">common</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">defaults</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">common</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u5F53\u4F7F\u7528\u52A8\u6001\u5C5E\u6027\u540D\u521B\u5EFA\u5BF9\u8C61\u65F6\uFF0C\u8BF7\u4F7F\u7528\u5BF9\u8C61\u8BA1\u7B97\u5C5E\u6027\u540D\u6765\u8FDB\u884C\u521B\u5EFA</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u56E0\u4E3A\u8FD9\u6837\u505A\u5C31\u53EF\u4EE5\u8BA9\u4F60\u5728\u4E00\u4E2A\u5730\u65B9\u5B9A\u4E49\u6240\u6709\u7684\u5BF9\u8C61\u5C5E\u6027</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">a key named </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;San Francisco&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;San Francisco&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>\u8BF7\u4F7F\u7528\u5BF9\u8C61\u65B9\u6CD5\u7684\u7B80\u5199\u65B9\u5F0F\uFF0Ceslint: object-shorthand</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

  <span class="token function-variable function">addValue</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> item<span class="token punctuation">.</span>value <span class="token operator">+</span> val
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

  <span class="token function">addValue</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> item<span class="token punctuation">.</span>value <span class="token operator">+</span> val
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>\u8BF7\u4F7F\u7528\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u7B80\u5199\u65B9\u5F0F\uFF0Ceslint: object-shorthand</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8BF7\u4F7F\u7528\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u7B80\u5199\u65B9\u5F0F\uFF0Ceslint: object-shorthand</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> job <span class="token operator">=</span> <span class="token string">&#39;FrontEnd&#39;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">job</span><span class="token operator">:</span> job
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
  job
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u5C06\u7B80\u5199\u7684\u5BF9\u8C61\u5C5E\u6027\u5206\u7EC4\u540E\u7EDF\u4E00\u653E\u5230\u5BF9\u8C61\u58F0\u660E\u7684\u5F00\u5934</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u8FD9\u6837\u66F4\u5BB9\u6613\u533A\u5206\u54EA\u4E9B\u5C5E\u6027\u7528\u4E86\u7B80\u5199\u7684\u65B9\u5F0F</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> job <span class="token operator">=</span> <span class="token string">&#39;FrontEnd&#39;</span>
<span class="token keyword">const</span> department <span class="token operator">=</span> <span class="token string">&#39;JDC&#39;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span><span class="token punctuation">,</span>
  job<span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
  department
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span>
  job<span class="token punctuation">,</span>
  department<span class="token punctuation">,</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>\u53EA\u5BF9\u975E\u6CD5\u6807\u8BC6\u7B26\u7684\u5C5E\u6027\u4F7F\u7528\u5F15\u53F7\uFF0Ceslint: quote-props</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u56E0\u4E3A\u901A\u5E38\u6765\u8BF4\u6211\u4EEC\u8BA4\u4E3A\u8FD9\u6837\u4E3B\u89C2\u4E0A\u4F1A\u66F4\u5BB9\u6613\u9605\u8BFB\uFF0C\u8FD9\u6837\u4F1A\u5E26\u6765\u4EE3\u7801\u9AD8\u4EAE\u4E0A\u7684\u63D0\u5347\uFF0C\u540C\u65F6\u4E5F\u66F4\u5BB9\u6613\u88AB\u4E3B\u6D41 JS \u5F15\u64CE\u4F18\u5316</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> bad <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;foo&#39;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;bar&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;data-blah&#39;</span><span class="token operator">:</span> <span class="token number">5</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> good <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;data-blah&#39;</span><span class="token operator">:</span> <span class="token number">5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u4E0D\u8981\u76F4\u63A5\u4F7F\u7528 Object.prototype \u7684\u65B9\u6CD5, \u4F8B\u5982 hasOwnProperty, propertyIsEnumerable \u548C isPrototypeOf \u65B9\u6CD5\uFF0Ceslint: no-prototype-builtins</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u80FD\u4F1A\u88AB\u5BF9\u8C61\u81EA\u8EAB\u7684\u540C\u540D\u5C5E\u6027\u8986\u76D6 - \u6BD4\u5982 { hasOwnProperty: false } \u6216\u8005\u5BF9\u8C61\u53EF\u80FD\u662F\u4E00\u4E2A null \u5BF9\u8C61(Object.create(null))</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token comment">// bad</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> has <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty <span class="token comment">// cache the lookup once, in module scope.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">has</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">/* or */</span>
<span class="token keyword">import</span> has <span class="token keyword">from</span> <span class="token string">&#39;has&#39;</span> <span class="token comment">// https://www.npmjs.com/package/has</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">has</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u4F18\u5148\u4F7F\u7528\u5BF9\u8C61\u5C55\u5F00\u8FD0\u7B97\u7B26 ... \u6765\u505A\u5BF9\u8C61\u6D45\u62F7\u8D1D\u800C\u4E0D\u662F\u4F7F\u7528 Object.assign\uFF0C\u4F7F\u7528\u5BF9\u8C61\u5269\u4F59\u64CD\u4F5C\u7B26\u6765\u83B7\u5F97\u4E00\u4E2A\u5305\u542B\u786E\u5B9A\u7684\u5269\u4F59\u5C5E\u6027\u7684\u65B0\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// very bad</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> copy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// this mutates \`original\` \u0CA0_\u0CA0</span>
<span class="token keyword">delete</span> copy<span class="token punctuation">.</span>a <span class="token comment">// so does this</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> copy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> original<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// copy =&gt; { a: 1, b: 2, c: 3 }</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> copy <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>original<span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token comment">// copy =&gt; { a: 1, b: 2, c: 3 }</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> <span class="token operator">...</span>noA <span class="token punctuation">}</span> <span class="token operator">=</span> copy <span class="token comment">// noA =&gt; { b: 2, c: 3 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><ul><li>\u8BF7\u4F7F\u7528\u5B57\u9762\u91CF\u503C\u521B\u5EFA\u6570\u7EC4\uFF0Ceslint: no-array-constructor</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u5411\u6570\u7EC4\u4E2D\u6DFB\u52A0\u5143\u7D20\u65F6\uFF0C\u8BF7\u4F7F\u7528 push \u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">// bad</span>
items<span class="token punctuation">[</span>items<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span>

<span class="token comment">// good</span>
items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26 ... \u590D\u5236\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> len <span class="token operator">=</span> items<span class="token punctuation">.</span>length
<span class="token keyword">let</span> i

<span class="token comment">// bad</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  itemsCopy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u628A\u4E00\u4E2A\u53EF\u8FED\u4EE3\u7684\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4\u65F6\uFF0C\u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26 ... \u800C\u4E0D\u662F Array.from</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.foo&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u4F7F\u7528 Array.from \u6765\u5C06\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arrLike <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arrLike<span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrLike<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u904D\u5386\u8FED\u4EE3\u5668\u8FDB\u884C\u6620\u5C04\u65F6\u4F7F\u7528 Array.from \u4EE3\u66FF\u6269\u5C55\u8FD0\u7B97\u7B26 ..., \u56E0\u4E3A\u8FD9\u53EF\u4EE5\u907F\u514D\u521B\u5EFA\u4E2D\u95F4\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u4F7F\u7528\u6570\u7EC4\u7684 map \u7B49\u65B9\u6CD5\u65F6\uFF0C\u8BF7\u4F7F\u7528 return \u58F0\u660E\uFF0C\u5982\u679C\u662F\u5355\u4E00\u58F0\u660E\u8BED\u53E5\u7684\u60C5\u51B5\uFF0C\u53EF\u7701\u7565 return</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> flat <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">memo<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> flatten <span class="token operator">=</span> memo<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  flat<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> flatten
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> flat <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">memo<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> flatten <span class="token operator">=</span> memo<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  flat<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> flatten
  <span class="token keyword">return</span> flatten
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// bad</span>
inbox<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> subject<span class="token punctuation">,</span> author <span class="token punctuation">}</span> <span class="token operator">=</span> msg
  <span class="token keyword">if</span> <span class="token punctuation">(</span>subject <span class="token operator">===</span> <span class="token string">&#39;Mockingbird&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> author <span class="token operator">===</span> <span class="token string">&#39;Harper Lee&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
inbox<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> subject<span class="token punctuation">,</span> author <span class="token punctuation">}</span> <span class="token operator">=</span> msg
  <span class="token keyword">if</span> <span class="token punctuation">(</span>subject <span class="token operator">===</span> <span class="token string">&#39;Mockingbird&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> author <span class="token operator">===</span> <span class="token string">&#39;Harper Lee&#39;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><ul><li>\u5982\u679C\u4E00\u4E2A\u6570\u7EC4\u6709\u591A\u884C\u5219\u8981\u5728\u6570\u7EC4\u7684\u5F00\u62EC\u53F7\u540E\u548C\u95ED\u62EC\u53F7\u524D\u4F7F\u7528\u65B0\u884C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> objectInArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> numberInArray <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
<span class="token punctuation">]</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> objectInArray <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> numberInArray <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token number">2</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> \u89E3\u6784\u8D4B\u503C</h2><ul><li>\u5F53\u9700\u8981\u4F7F\u7528\u5BF9\u8C61\u7684\u591A\u4E2A\u5C5E\u6027\u65F6\uFF0C\u8BF7\u4F7F\u7528\u89E3\u6784\u8D4B\u503C\uFF0Ceslint: prefer-destructuring</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u613F\u610F\uFF1A\u89E3\u6784\u53EF\u4EE5\u907F\u514D\u521B\u5EFA\u5C5E\u6027\u7684\u4E34\u65F6\u5F15\u7528</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> firstName <span class="token operator">=</span> user<span class="token punctuation">.</span>firstName
  <span class="token keyword">const</span> lastName <span class="token operator">=</span> user<span class="token punctuation">.</span>lastName

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span> <span class="token operator">=</span> user

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token comment">// better</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li>\u5F53\u9700\u8981\u4F7F\u7528\u6570\u7EC4\u7684\u591A\u4E2A\u503C\u65F6\uFF0C\u8BF7\u540C\u6837\u4F7F\u7528\u89E3\u6784\u8D4B\u503C\uFF0Ceslint: prefer-destructuring</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> first <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> second <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>first<span class="token punctuation">,</span> second<span class="token punctuation">]</span> <span class="token operator">=</span> arr
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>\u51FD\u6570\u9700\u8981\u56DE\u4F20\u591A\u4E2A\u503C\u65F6\uFF0C\u8BF7\u4F7F\u7528\u5BF9\u8C61\u7684\u89E3\u6784\uFF0C\u800C\u4E0D\u662F\u6570\u7EC4\u7684\u89E3\u6784</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u53EF\u4EE5\u975E\u7834\u574F\u6027\u5730\u968F\u65F6\u589E\u52A0\u6216\u8005\u6539\u53D8\u5C5E\u6027\u987A\u5E8F</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">doSomething</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> left<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u662F\u6570\u7EC4\u89E3\u6784\uFF0C\u90A3\u4E48\u5728\u8C03\u7528\u65F6\u5C31\u9700\u8981\u8003\u8651\u6570\u636E\u7684\u987A\u5E8F</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> xx<span class="token punctuation">,</span> xxx<span class="token punctuation">,</span> left<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">doSomething</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> left <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B64\u65F6\u4E0D\u9700\u8981\u8003\u8651\u6570\u636E\u7684\u987A\u5E8F</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> left <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h2><ul><li>\u5B57\u7B26\u4E32\u7EDF\u4E00\u4F7F\u7528\u5355\u5F15\u53F7\u7684\u5F62\u5F0F &#39;&#39;\uFF0Ceslint: quotes</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> department <span class="token operator">=</span> <span class="token string">&quot;JDC&quot;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> department <span class="token operator">=</span> <span class="token string">&#39;JDC&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u5B57\u7B26\u4E32\u592A\u957F\u7684\u65F6\u5019\uFF0C\u8BF7\u4E0D\u8981\u4F7F\u7528\u5B57\u7B26\u4E32\u8FDE\u63A5\u7B26\u6362\u884C \\\uFF0C\u800C\u662F\u4F7F\u7528 +</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;\u51F9\u51F8\u5B9E\u9A8C\u5BA4 \u51F9\u51F8\u5B9E\u9A8C\u5BA4 \u51F9\u51F8\u5B9E\u9A8C\u5BA4&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;\u51F9\u51F8\u5B9E\u9A8C\u5BA4 \u51F9\u51F8\u5B9E\u9A8C\u5BA4 \u51F9\u51F8\u5B9E\u9A8C\u5BA4&#39;</span> <span class="token operator">+</span>
  &#39;\u51F9\u51F8\u5B9E\u9A8C\u5BA4 \u51F9\u51F8\u5B9E\u9A8C\u5BA4
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u7A0B\u5E8F\u5316\u751F\u6210\u5B57\u7B26\u4E32\u65F6\uFF0C\u8BF7\u4F7F\u7528\u6A21\u677F\u5B57\u7B26\u4E32\uFF0Ceslint: prefer-template template-curly-spacing</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> test<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">+</span> test

<span class="token comment">// good</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ab</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>test<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u4E0D\u8981\u5BF9\u5B57\u7B26\u4E32\u4F7F\u7528eval()\uFF0C\u4F1A\u5BFC\u81F4\u592A\u591A\u6F0F\u6D1E\uFF0C eslint: no-eval</li><li>\u4E0D\u8981\u5728\u5B57\u7B26\u4E32\u4E2D\u4F7F\u7528\u4E0D\u5FC5\u8981\u7684\u8F6C\u4E49\u5B57\u7B26\uFF0C eslint: no-useless-escape</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;\\&#39;this\\&#39; \\i\\s \\&quot;quoted\\&quot;&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;\\&#39;this\\&#39; is &quot;quoted&quot;&#39;</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">my name is &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><ul><li>\u4E0D\u8981\u4F7F\u7528Function\u6784\u9020\u51FD\u6570\u521B\u5EFA\u51FD\u6570\uFF0C eslint: no-new-func</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u6B64\u65B9\u5F0F\u521B\u5EFA\u51FD\u6570\u548C\u5BF9\u5B57\u7B26\u4E32\u4F7F\u7528 eval() \u4E00\u6837\u4F1A\u4EA7\u751F\u6F0F\u6D1E</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> add <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a + b&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// still bad</span>
<span class="token keyword">const</span> subtract <span class="token operator">=</span> <span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a - b&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u5728\u51FD\u6570\u7B7E\u540D\u4E2D\u4F7F\u7528\u7A7A\u683C\uFF0Ceslint: space-before-function-paren space-before-blocks</li></ul><p>const f = function(){} const g = function (){} const h = function() {}</p><p>// good const x = function b () {} const y = function a () {}</p><ul><li>\u4F7F\u7528\u5177\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u800C\u975E\u51FD\u6570\u58F0\u660E\uFF0Ceslint: func-style</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u8FD9\u6837\u505A\u4F1A\u5BFC\u81F4\u51FD\u6570\u58F0\u660E\u88AB\u63D0\u5347\uFF0C\u8FD9\u610F\u5473\u7740\u5F88\u5BB9\u6613\u5728\u6587\u4EF6\u4E2D\u5B9A\u4E49\u6B64\u51FD\u6570\u4E4B\u524D\u5F15\u7528\u5B83\uFF0C\u4E0D\u5229\u4E8E\u53EF\u8BFB\u6027\u548C\u53EF\u7EF4\u62A4\u6027\u3002\u5982\u679C\u4F60\u53D1\u73B0\u51FD\u6570\u5B9A\u4E49\u65E2\u5E9E\u5927\u53C8\u590D\u6742\u4EE5\u81F3\u4E8E\u4E0D\u80FD\u7406\u89E3\u6587\u4EF6\u7684\u5176\u4ED6\u90E8\u5206\uFF0C\u6216\u8BB8\u4F60\u5E94\u8BE5\u5C06\u5B83\u62C6\u5206\u6210\u6A21\u5757\uFF01\u522B\u5FD8\u8BB0\u8981\u663E\u5F0F\u547D\u540D\u8868\u8FBE\u5F0F\uFF0C\u800C\u4E0D\u7528\u7BA1\u540D\u5B57\u662F\u5426\u662F\u4ECE\u5305\u542B\u7684\u53D8\u91CF\uFF08\u901A\u5E38\u51FA\u73B0\u5728\u73B0\u4EE3\u6D4F\u89C8\u5668\u4E2D\u6216\u8005\u4F7F\u7528 Babel \u7F16\u8BD1\u5668\u7684\u65F6\u5019\uFF09\u4E2D\u63A8\u65AD\u7684\u3002\u8FD9\u6837\u4F1A\u6D88\u9664\u9519\u8BEF\u8C03\u7528\u5806\u6808\u4E2D\u7684\u4EFB\u4F55\u5047\u8BBE\u3002 (\u8BA8\u8BBA)</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token comment">// lexical name distinguished from the variable-referenced invocation(s)</span>
<span class="token keyword">const</span> <span class="token function-variable function">short</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">longUniqueMoreDescriptiveLexicalFoo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>\u7528\u5706\u62EC\u53F7\u5305\u88F9\u81EA\u6267\u884C\u533F\u540D\u51FD\u6570\uFF0Ceslint\uFF1Awrap-iife</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u4E00\u4E2A\u7ACB\u5373\u6267\u884C\u533F\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u662F\u4E00\u4E2A\u5355\u4E00\u7684\u5355\u5143\uFF0C\u5C06\u5176\u53CA\u5176\u8C03\u7528\u62EC\u53F7\u5305\u88C5\u5728\u62EC\u53F7\u4E2D\uFF0C\u80FD\u591F\u6E05\u695A\u5730\u8868\u8FBE\u8FD9\u4E00\u70B9\u3002\u6CE8\u610F\uFF0C\u5728\u5230\u5904\u90FD\u662F\u6A21\u5757\u7684\u4E16\u754C\u4E2D\u51E0\u4E4E\u4E0D\u9700\u8981 IIFE\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// immediately-invoked function expression (IIFE)</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Welcome to the Internet. Please follow me.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u4E0D\u8981\u5728\u975E\u51FD\u6570\u4EE3\u7801\u5757\uFF08if , while \u7B49\uFF09\u4E2D\u58F0\u660E\u51FD\u6570\uFF0Ceslint\uFF1Ano-loop-func</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isUse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">test</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">let</span> test
<span class="token keyword">if</span> <span class="token punctuation">(</span>isUse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u4E0D\u8981\u5C06\u53C2\u6570\u547D\u540D\u4E3A arguments\uFF0C\u4F1A\u5BFC\u81F4\u8BE5\u53C2\u6570\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u6BCF\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u5185\u539F\u5148\u5B58\u5728\u7684 arguments \u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> arguments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u4E0D\u8981\u4F7F\u7528 arguments\uFF0C\u4F7F\u7528 \u5269\u4F59\u8FD0\u7B97\u7B26 ...</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>arguments \u53EA\u662F\u4E00\u4E2A\u7C7B\u6570\u7EC4\uFF0C\u800C ... \u662F\u4E00\u4E2A\u771F\u6B63\u7684\u6570\u7EC4</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">test</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">test</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u4F7F\u7528\u53C2\u6570\u9ED8\u8BA4\u503C\u8BED\u6CD5\u800C\u4E0D\u662F\u4FEE\u6539\u51FD\u6570\u53C2\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// really bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span> <span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// No! We shouldn&#39;t mutate function arguments.</span>
  <span class="token comment">// Double bad: if opts is falsy it&#39;ll be set to an object which may</span>
  <span class="token comment">// be what you want but it can introduce subtle bugs.</span>
  opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// still bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span> <span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span> <span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>\u907F\u514D\u53C2\u6570\u9ED8\u8BA4\u503C\u7684\u526F\u4F5C\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">count</span> <span class="token punctuation">(</span><span class="token parameter">a <span class="token operator">=</span> b<span class="token operator">++</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 1</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 2</span>
<span class="token function">count</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>\u5C06\u53C2\u6570\u9ED8\u8BA4\u503C\u653E\u5728\u6700\u540E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span> <span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>\u4E0D\u8981\u66F4\u6539\u53C2\u6570\uFF0Ceslint: no-param-reassign</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u64CD\u4F5C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u7684\u5BF9\u8C61\u53EF\u80FD\u5728\u539F\u59CB\u8C03\u7528\u4E2D\u9020\u6210\u610F\u60F3\u4E0D\u5230\u7684\u53D8\u91CF\u526F\u4F5C\u7528</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">f1</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  obj<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">f2</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> obj<span class="token punctuation">.</span>key <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>\u4E0D\u8981\u7ED9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\uFF0Ceslint: no-param-reassign</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u53C2\u6570\u91CD\u65B0\u8D4B\u503C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u65E0\u6CD5\u9884\u671F\u7684\u884C\u4E3A\uFF0C\u5C24\u5176\u662F\u5F53\u64CD\u4F5C arguments \u5BF9\u8C61\u65F6\uFF0C\u4E5F\u53EF\u80FD\u5BFC\u81F4\u4F18\u5316\u95EE\u9898\uFF0C\u5C24\u5176\u662F\u5728 V8 \u5F15\u64CE\u4E2D</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">f1</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">f2</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">f3</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> a <span class="token operator">||</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">f4</span> <span class="token punctuation">(</span><span class="token parameter">a <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>\u8C03\u7528\u53EF\u53D8\u53C2\u6570\u51FD\u6570\u65F6\u5EFA\u8BAE\u4F7F\u7528\u5C55\u5F00\u8FD0\u7B97\u7B26 ....\uFF0C eslint: prefer-spread</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u663E\u7136\u4F60\u65E0\u9700\u4F7F\u7528\u4E0A\u4E0B\u6587\uFF0C\u5F88\u96BE\u7ED3\u5408 new \u548C apply</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> x<span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>x<span class="token punctuation">)</span>

<span class="token comment">// bad</span>
<span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Date<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h2><ul><li>\u5F53\u4F60\u5FC5\u987B\u4F7F\u7528\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08\u4F20\u9012\u533F\u540D\u51FD\u6570\uFF09\u65F6\uFF0C\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u6807\u8BB0. eslint: prefer-arrow-callback, arrow-spacing</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><h2 id="\u539F\u56E0-\u5B83\u5C06\u521B\u5EFA\u5728-this-\u4E0A\u4E0B\u6587\u4E2D\u6267\u884C\u7684\u51FD\u6570\u7248\u672C-\u901A\u5E38\u662F\u60A8\u60F3\u8981\u7684-\u5E76\u4E14\u8BED\u6CD5\u66F4\u7B80\u6D01" tabindex="-1"><a class="header-anchor" href="#\u539F\u56E0-\u5B83\u5C06\u521B\u5EFA\u5728-this-\u4E0A\u4E0B\u6587\u4E2D\u6267\u884C\u7684\u51FD\u6570\u7248\u672C-\u901A\u5E38\u662F\u60A8\u60F3\u8981\u7684-\u5E76\u4E14\u8BED\u6CD5\u66F4\u7B80\u6D01" aria-hidden="true">#</a> \u539F\u56E0\uFF1A\u5B83\u5C06\u521B\u5EFA\u5728 this \u4E0A\u4E0B\u6587\u4E2D\u6267\u884C\u7684\u51FD\u6570\u7248\u672C\uFF0C\u901A\u5E38\u662F\u60A8\u60F3\u8981\u7684\uFF0C\u5E76\u4E14\u8BED\u6CD5\u66F4\u7B80\u6D01</h2><p>\u5982\u679C\u60A8\u6709\u4E00\u4E2A\u76F8\u5F53\u590D\u6742\u7684\u51FD\u6570\uFF0C\u5219\u53EF\u4EE5\u5C06\u8BE5\u903B\u8F91\u79FB\u5230\u5176\u81EA\u5DF1\u7684\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u4E2D</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u5982\u679C\u51FD\u6570\u4F53\u53EA\u5305\u542B\u4E00\u6761\u6CA1\u6709\u526F\u4F5C\u7528\u7684\u8FD4\u56DE\u8868\u8FBE\u5F0F\u7684\u8BED\u53E5\uFF0C\u53EF\u4EE5\u7701\u7565\u82B1\u62EC\u53F7\u5E76\u4F7F\u7528\u9690\u5F0F\u7684 return\uFF0C \u5426\u5219\u4FDD\u7559\u82B1\u62EC\u53F7\u5E76\u4F7F\u7528 return \u8BED\u53E5\uFF0Ceslint: arrow-parens, arrow-body-style</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextNumber <span class="token operator">=</span> number <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A string containing the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nextNumber<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A string containing the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextNumber <span class="token operator">=</span> number <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A string containing the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>nextNumber<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">index</span><span class="token operator">:</span> number
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// No implicit return with side effects</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something if callback returns true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> bool <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token comment">// bad</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> bool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  bool <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><ul><li>\u4E00\u65E6\u8868\u8FBE\u5F0F\u8DE8\u591A\u884C\uFF0C\u4F7F\u7528\u5706\u62EC\u53F7\u5305\u88F9\u4EE5\u4FBF\u66F4\u597D\u9605\u8BFB</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">httpMethod</span> <span class="token operator">=&gt;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
    httpMagicObjectWithAVeryLongName<span class="token punctuation">,</span>
    httpMethod
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">httpMethod</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
    httpMagicObjectWithAVeryLongName<span class="token punctuation">,</span>
    httpMethod
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u51FD\u6570\u5982\u679C\u53EA\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\u5E76\u4E14\u6CA1\u4F7F\u7528\u7528\u82B1\u62EC\u53F7\uFF0C\u5219\u7701\u7565\u5706\u62EC\u53F7\uFF0C\u5426\u5219\u4E3A\u4E86\u6E05\u6670\u660E\u786E\u5219\u4F7F\u7528\u5706\u62EC\u53F7\u5305\u88F9\u53C2\u6570\uFF0C\u6CE8\u610F\uFF1A\u603B\u662F\u4F7F\u7528\u5706\u62EC\u53F7\u4E5F\u662F\u53EF\u4EE5\u63A5\u53D7\u7684\uFF0Ceslint \u4E2D\u7684 \u201Calways\u201D \u9009\u9879\uFF0Ceslint: arrow-parens</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">A long string with the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. It\u2019s so long that we\u2019ve broken it </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
  <span class="token string">&#39;over multiple lines!&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u7C7B-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7C7B-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u7C7B&amp;\u6784\u9020\u51FD\u6570</h2><ul><li>\u4F7F\u7528 class\uFF0C\u907F\u514D\u76F4\u63A5\u64CD\u4F5C prototype</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">Queue</span> <span class="token punctuation">(</span><span class="token parameter">contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span>contents<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>contents<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token function">pop</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li>\u4F7F\u7528 extends \u6765\u5B9E\u73B0\u7EE7\u627F</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u8FD9\u662F\u4E00\u4E2A\u4E0D\u4F1A\u7834\u574F instanceof \u7684\u5185\u5EFA\u5B9E\u73B0\u539F\u578B\u5F0F\u7EE7\u627F\u7684\u65B9\u5F0F</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> inherits <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inherits&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">PeekableQueue</span><span class="token punctuation">(</span><span class="token parameter">contents</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Queue</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> contents<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">inherits</span><span class="token punctuation">(</span>PeekableQueue<span class="token punctuation">,</span> Queue<span class="token punctuation">)</span>
<span class="token class-name">PeekableQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">peek</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">PeekableQueue</span> <span class="token keyword">extends</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">peek</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>\u5982\u679C\u672A\u58F0\u660E\u6784\u9020\u51FD\u6570\uFF0C\u5219\u7C7B\u4F1A\u6709\u4E00\u4E2A\u9ED8\u8BA4\u7684\u6784\u9020\u51FD\u6570\uFF0C\u6CA1\u5FC5\u8981\u7528\u7A7A\u7684\u6784\u9020\u51FD\u6570\u6216\u8005\u5C06\u5176\u59D4\u6258\u7ED9\u7236\u7C7B\uFF0Ceslint: no-useless-constructor</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Rey</span> <span class="token keyword">extends</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Rey</span> <span class="token keyword">extends</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Rey&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li>\u907F\u514D\u7C7B\u6210\u5458\u91CD\u590D\uFF0Ceslint: no-dupe-class-members</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u91CD\u590D\u7684\u7C7B\u6210\u5458\u58F0\u660E\u4F1A\u9ED8\u8BA4\u4F7F\u7528\u6700\u540E\u58F0\u660E\u7684\uFF0C\u901A\u5E38\u4F1A\u5BFC\u81F4 bug</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span> <span class="token punctuation">}</span>
  <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">bar</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">2</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757" aria-hidden="true">#</a> \u6A21\u5757</h2><ul><li>\u4F7F\u7528\u6807\u51C6\u7684 ES6 \u6A21\u5757\u8BED\u6CD5 import \u548C export</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u6A21\u5757\u662F\u672A\u6765\uFF0C\u8BA9\u6211\u4EEC\u73B0\u5728\u5F00\u59CB\u4F7F\u7528\u672A\u6765\u7684\u7279\u6027</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./util&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> util

<span class="token comment">// good</span>
<span class="token keyword">import</span> Util <span class="token keyword">from</span> <span class="token string">&#39;./util&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Util

<span class="token comment">// better</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Util <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./util&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Util
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u4E0D\u8981\u4F7F\u7528 import \u7684\u901A\u914D\u7B26 *\uFF0C\u8FD9\u6837\u53EF\u4EE5\u786E\u4FDD\u4F60\u53EA\u6709\u4E00\u4E2A\u9ED8\u8BA4\u7684 export</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Util <span class="token keyword">from</span> <span class="token string">&#39;./util&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> Util <span class="token keyword">from</span> <span class="token string">&#39;./util&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u540C\u4E2A\u6587\u4EF6\u6BCF\u4E2A\u6A21\u5757\u53EA\u5141\u8BB8 import \u4E00\u6B21\uFF0C\u6709\u591A\u4E2A import \u8BF7\u4E66\u5199\u5728\u4E00\u8D77\uFF0Ceslint: no-duplicate-imports</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u8FD9\u6837\u53EF\u4EE5\u8BA9\u4EE3\u7801\u66F4\u6613\u4E8E\u7EF4\u62A4</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span>
<span class="token comment">// \u2026 some other imports \u2026 //</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> named1<span class="token punctuation">,</span> named2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo<span class="token punctuation">,</span> <span class="token punctuation">{</span> named1<span class="token punctuation">,</span> named2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  named1<span class="token punctuation">,</span>
  named2
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u5C06\u6240\u6709 import \u8BED\u53E5\u653E\u5728\u6587\u4EF6\u6700\u524D\u65B9\uFF0Ceslint: import/imports-first</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span>
foo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">&#39;bar&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span>
<span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">&#39;bar&#39;</span>

foo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u591A\u884C\u5BFC\u5165\u5E94\u8BE5\u50CF\u591A\u884C\u6570\u7EC4\u548C\u5BF9\u8C61\u6587\u5B57\u4E00\u6837\u7F29\u8FDB</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> longNameA<span class="token punctuation">,</span> longNameB<span class="token punctuation">,</span> longNameC<span class="token punctuation">,</span> longNameD<span class="token punctuation">,</span> longNameE <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  longNameA<span class="token punctuation">,</span>
  longNameB<span class="token punctuation">,</span>
  longNameC<span class="token punctuation">,</span>
  longNameD<span class="token punctuation">,</span>
  longNameE
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u5728\u6A21\u5757 import \u58F0\u660E\u4E2D\u7981\u6B62\u4F7F\u7528 Webpack \u7684 loader \u8BED\u6CD5\uFF0Ceslint: import/no-webpack-loader-syntax</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> fooSass <span class="token keyword">from</span> <span class="token string">&#39;css!sass!foo.scss&#39;</span>
<span class="token keyword">import</span> barCss <span class="token keyword">from</span> <span class="token string">&#39;style!css!bar.css&#39;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> fooSass <span class="token keyword">from</span> <span class="token string">&#39;foo.scss&#39;</span>
<span class="token keyword">import</span> barCss <span class="token keyword">from</span> <span class="token string">&#39;bar.css&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668</h2><ul><li>\u4E0D\u8981\u4F7F\u7528 iterators\uFF0C\u5EFA\u8BAE\u4F7F\u7528 JS \u66F4\u9AD8\u4F18\u5148\u7EA7\u7684\u51FD\u6570\u4EE3\u66FF for-in \u6216 for-of \u5FAA\u73AF\uFF0C\u9664\u975E\u8FEB\u4E0D\u5F97\u5DF2\uFF0Ceslint: no-iterator no-restricted-syntax</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token comment">// bad</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sum <span class="token operator">+=</span> num
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
numbers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">num</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+=</span> num<span class="token punctuation">)</span>

<span class="token comment">// better</span>
<span class="token keyword">const</span> sum <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">total<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> total <span class="token operator">+</span> num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668" aria-hidden="true">#</a> \u751F\u6210\u5668</h2><ul><li>\u73B0\u9636\u6BB5\u8BF7\u4E0D\u8981\u4F7F\u7528\u751F\u6210\u5668 generator</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u56E0\u4E3A\u4E0D\u80FD\u5F88\u597D\u5730\u7FFB\u8BD1\u6210 ES5 \u4EE3\u7801</p></div><h2 id="\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> \u5BF9\u8C61\u5C5E\u6027</h2><ul><li>\u4F7F\u7528 . \u6765\u8BBF\u95EE\u5BF9\u8C61\u5C5E\u6027</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> joke <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;haha&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">28</span>
<span class="token punctuation">}</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> joke<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> joke<span class="token punctuation">.</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>\u5F53\u8BBF\u95EE\u7684\u5C5E\u6027\u662F\u53D8\u91CF\u65F6\u4F7F\u7528 []</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">jedi</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getProp</span> <span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> luke<span class="token punctuation">[</span>prop<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> isJedi <span class="token operator">=</span> <span class="token function">getProp</span><span class="token punctuation">(</span><span class="token string">&#39;jedi&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u53D8\u91CF\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u58F0\u660E" aria-hidden="true">#</a> \u53D8\u91CF\u58F0\u660E</h2><ul><li>\u58F0\u660E\u53D8\u91CF\u65F6\uFF0C\u8BF7\u4F7F\u7528 const\u3001let \u5173\u952E\u5B57\uFF0C\u5982\u679C\u6CA1\u6709\u5199\u5173\u952E\u5B57\uFF0C\u53D8\u91CF\u5C31\u4F1A\u66B4\u9732\u5728\u5168\u5C40\u4E0A\u4E0B\u6587\u4E2D\uFF0C\u8FD9\u6837\u5F88\u53EF\u80FD\u4F1A\u548C\u73B0\u6709\u53D8\u91CF\u51B2\u7A81\uFF0C\u53E6\u5916\uFF0C\u4E5F\u5F88\u96BE\u660E\u786E\u8BE5\u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u662F\u4EC0\u4E48\u3002\u8FD9\u91CC\u63A8\u8350\u4F7F\u7528 const \u6765\u58F0\u660E\u53D8\u91CF\uFF0C\u6211\u4EEC\u9700\u8981\u907F\u514D\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u7684\u6C61\u67D3\u3002eslint: no-undef prefer-const</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
demo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> demo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u5C06\u6240\u6709\u7684 const \u548C let \u5206\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">let</span> a
<span class="token keyword">const</span> b
<span class="token keyword">let</span> c
<span class="token keyword">const</span> d
<span class="token keyword">let</span> e

<span class="token comment">// good</span>
<span class="token keyword">const</span> b
<span class="token keyword">const</span> d
<span class="token keyword">let</span> a
<span class="token keyword">let</span> c
<span class="token keyword">let</span> e
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u53D8\u91CF\u4E0D\u8981\u8FDB\u884C\u94FE\u5F0F\u8D4B\u503C</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u53D8\u91CF\u94FE\u5F0F\u8D4B\u503C\u4F1A\u521B\u5EFA\u9690\u85CF\u7684\u5168\u5C40\u53D8\u91CF</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// JavaScript interprets this as</span>
  <span class="token comment">// let a = ( b = ( c = 1 ) );</span>
  <span class="token comment">// The let keyword only applies to variable a; variables b and c become</span>
  <span class="token comment">// global variables.</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> b <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// throws ReferenceError</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// 1</span>

<span class="token comment">// good</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> a
  <span class="token keyword">let</span> c <span class="token operator">=</span> a
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// throws ReferenceError</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// throws ReferenceError</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// throws ReferenceError</span>

<span class="token comment">// the same applies for \`const\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ul><li>\u4E0D\u5141\u8BB8\u51FA\u73B0\u672A\u88AB\u4F7F\u7528\u7684\u53D8\u91CF\uFF0Ceslint: no-unused-vars</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u539F\u56E0\uFF1A\u58F0\u660E\u4F46\u672A\u88AB\u4F7F\u7528\u7684\u53D8\u91CF\u901A\u5E38\u662F\u4E0D\u5B8C\u5168\u91CD\u6784\u72AF\u4E0B\u7684\u9519\u8BEF.\u8FD9\u79CD\u53D8\u91CF\u5728\u4EE3\u7801\u91CC\u6D6A\u8D39\u7A7A\u95F4\u5E76\u4F1A\u7ED9\u8BFB\u8005\u9020\u6210\u56F0\u6270</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>

<span class="token keyword">var</span> some_unused_var <span class="token operator">=</span> <span class="token number">42</span>

<span class="token comment">// Write-only variables are not considered as used.</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">10</span>
y <span class="token operator">=</span> <span class="token number">5</span>

<span class="token comment">// A read for a modification of itself is not considered as used.</span>
<span class="token keyword">var</span> z <span class="token operator">=</span> <span class="token number">0</span>
z <span class="token operator">=</span> z <span class="token operator">+</span> <span class="token number">1</span>

<span class="token comment">// Unused function arguments.</span>
<span class="token keyword">function</span> <span class="token function">getX</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token comment">// good</span>

<span class="token keyword">function</span> <span class="token function">getXPlusY</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">2</span>

<span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">getXPlusY</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// &#39;type&#39; is ignored even if unused because it has a rest property sibling.</span>
<span class="token comment">// This is a form of extracting an object that omits the specified keys.</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> <span class="token operator">...</span>coords <span class="token punctuation">}</span> <span class="token operator">=</span> data
<span class="token comment">// &#39;coords&#39; is now the &#39;data&#39; object without its &#39;type&#39; property.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="hoisting" tabindex="-1"><a class="header-anchor" href="#hoisting" aria-hidden="true">#</a> Hoisting</h2><ul><li>var \u5B58\u5728\u53D8\u91CF\u63D0\u5347\u7684\u60C5\u51B5\uFF0C\u5373 var \u58F0\u660E\u4F1A\u88AB\u63D0\u5347\u81F3\u8BE5\u4F5C\u7528\u57DF\u7684\u9876\u90E8\uFF0C\u4F46\u662F\u4ED6\u4EEC\u7684\u8D4B\u503C\u5E76\u4E0D\u4F1A\u3002\u800C const \u548C let \u5E76\u4E0D\u5B58\u5728\u8FD9\u79CD\u60C5\u51B5\uFF0C\u4ED6\u4EEC\u88AB\u8D4B\u4E88\u4E86 Temporal Dead Zones, TDZ\uFF0C \u4E86\u89E3 typeof \u4E0D\u518D\u5B89\u5168\u5F88\u91CD\u8981</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span> <span class="token function">example</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>notDefined<span class="token punctuation">)</span>   <span class="token comment">// =&gt; throws a ReferenceError</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">example</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declareButNotAssigned<span class="token punctuation">)</span>  <span class="token comment">// =&gt; undefined</span>
  <span class="token keyword">var</span> declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">example</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> declaredButNotAssigned
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span>   <span class="token comment">// =&gt; undefined</span>
  declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">example</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span>   <span class="token comment">// =&gt; throws a ReferenceError</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> declaredButNotAssigned<span class="token punctuation">)</span>  <span class="token comment">// =&gt; throws a ReferenceError</span>
  <span class="token keyword">const</span> declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>\u533F\u540D\u51FD\u6570\u7684\u53D8\u91CF\u540D\u4F1A\u63D0\u5347\uFF0C\u4F46\u51FD\u6570\u5185\u5BB9\u4E0D\u4F1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span>  <span class="token comment">// =&gt; undefined</span>

  <span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">var</span> <span class="token function-variable function">anonymous</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>\u547D\u540D\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u7684\u53D8\u91CF\u540D\u4F1A\u88AB\u63D0\u5347\uFF0C\u4F46\u51FD\u6570\u540D\u548C\u51FD\u6570\u51FD\u6570\u5185\u5BB9\u5E76\u4E0D\u4F1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>named<span class="token punctuation">)</span>  <span class="token comment">// =&gt; undefined</span>

  <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// =&gt; TypeError named is not a function</span>

  <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// =&gt; ReferenceError superPower is not defined</span>

  <span class="token keyword">var</span> <span class="token function-variable function">named</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">superPower</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Flying&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>named<span class="token punctuation">)</span>  <span class="token comment">// =&gt; undefined</span>

  <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// =&gt; TypeError named is not a function</span>

  <span class="token keyword">var</span> <span class="token function-variable function">named</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">named</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;named&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="\u6BD4\u8F83\u8FD0\u7B97\u7B26-\u76F8\u7B49" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83\u8FD0\u7B97\u7B26-\u76F8\u7B49" aria-hidden="true">#</a> \u6BD4\u8F83\u8FD0\u7B97\u7B26&amp;\u76F8\u7B49</h2><ul><li><p>\u4F7F\u7528 === \u548C !== \u800C\u975E == \u548C !=\uFF0Ceslint: eqeqeq</p></li><li></li><li><p>\u6761\u4EF6\u58F0\u660E\u4F8B\u5982 if \u4F1A\u7528 ToBoolean \u8FD9\u4E2A\u62BD\u8C61\u65B9\u6CD5\u5C06\u8868\u8FBE\u5F0F\u8F6C\u6210\u5E03\u5C14\u503C\u5E76\u9075\u5FAA\u5982\u4E0B\u89C4\u5219</p><ul><li>Objects \u7B49\u4E8E true</li><li>Undefined \u7B49\u4E8E false</li><li>Null \u7B49\u4E8E false</li><li>Booleans \u7B49\u4E8E \u5E03\u5C14\u503C</li><li>Numbers \u5728 +0, -0, \u6216\u8005 NaN \u7684\u60C5\u51B5\u4E0B\u7B49\u4E8E false, \u5176\u4ED6\u60C5\u51B5\u662F true</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// true</span>
  <span class="token comment">// \u6570\u7EC4(\u5373\u4F7F\u662F\u7A7A\u6570\u7EC4)\u4E5F\u662F\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u7B49\u4E8Etrue</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u5206\u53F7" tabindex="-1"><a class="header-anchor" href="#\u5206\u53F7" aria-hidden="true">#</a> \u5206\u53F7</h2><ul><li>\u6211\u4EEC\u9075\u5FAA Standard \u7684\u89C4\u8303\uFF0C\u4E0D\u4F7F\u7528\u5206\u53F7\u3002</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5173\u4E8E\u5E94\u4E0D\u5E94\u8BE5\u4F7F\u7528\u5206\u53F7\u7684\u8BA8\u8BBA\u6709\u5F88\u591A\uFF0C\u672C\u89C4\u8303\u8BA4\u4E3A\u975E\u5FC5\u8981\u7684\u65F6\u5019\uFF0C\u5E94\u8BE5\u4E0D\u4F7F\u7528\u5206\u53F7\uFF0C\u597D\u7684 JS \u7A0B\u5E8F\u5458\u5E94\u8BE5\u6E05\u695A\u573A\u666F\u4E0B\u662F\u4E00\u5B9A\u8981\u52A0\u5206\u53F7\u7684\uFF0C\u76F8\u4FE1\u4F60\u4E5F\u662F\u540D\u597D\u7684\u5F00\u53D1\u8005\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token string">&#39;good&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;hahaha&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token string">&#39;good&#39;</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;hahaha&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u6807\u51C6\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u6807\u51C6\u7279\u6027" aria-hidden="true">#</a> \u6807\u51C6\u7279\u6027</h2><p>\u4E3A\u4E86\u4EE3\u7801\u7684\u53EF\u79FB\u690D\u6027\u548C\u517C\u5BB9\u6027\uFF0C\u6211\u4EEC\u5E94\u8BE5\u6700\u5927\u5316\u7684\u4F7F\u7528\u6807\u51C6\u65B9\u6CD5\uFF0C\u4F8B\u5982\u4F18\u5148\u4F7F\u7528 string.charAt(3) \u800C\u4E0D\u662F string[3]</p><h2 id="eval" tabindex="-1"><a class="header-anchor" href="#eval" aria-hidden="true">#</a> eval()</h2><p>\u7531\u4E8E eval \u65B9\u6CD5\u6BD4\u8F83 evil\uFF0C\u6240\u4EE5\u6211\u4EEC\u7EA6\u5B9A\u7981\u6B62\u4F7F\u7528\u8BE5\u65B9\u6CD5</p><p>with() {}</p><p>\u7531\u4E8E with \u65B9\u6CD5\u4F1A\u4EA7\u751F\u795E\u5947\u7684\u4F5C\u7528\u57DF\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E5F\u662F\u7981\u6B62\u4F7F\u7528\u8BE5\u65B9\u6CD5\u7684</p><h2 id="\u4FEE\u6539\u5185\u7F6E\u5BF9\u8C61\u7684\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539\u5185\u7F6E\u5BF9\u8C61\u7684\u539F\u578B" aria-hidden="true">#</a> \u4FEE\u6539\u5185\u7F6E\u5BF9\u8C61\u7684\u539F\u578B</h2><p>\u4E0D\u8981\u4FEE\u6539\u5185\u7F6E\u5BF9\u8C61\uFF0C\u5982 Object \u548C Array</p><h2 id="\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D" aria-hidden="true">#</a> \u547D\u540D</h2><ol><li>\u91C7\u7528\u5C0F\u5199\u9A7C\u5CF0\u547D\u540D lowerCamelCase\uFF0C\u4EE3\u7801\u4E2D\u7684\u547D\u540D\u5747\u4E0D\u80FD\u4EE5\u4E0B\u5212\u7EBF\uFF0C \u4E5F\u4E0D\u80FD\u4EE5\u4E0B\u5212\u7EBF\u6216\u7F8E\u5143\u7B26\u53F7\u7ED3\u675F</li></ol>`,191),K=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[s("_name "),n("span",{class:"token operator"},"/"),s(" name_ "),n("span",{class:"token operator"},"/"),s(` name$
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),Y=n("ol",{start:"2"},[n("li",null,"\u65B9\u6CD5\u540D\u3001\u53C2\u6570\u540D\u3001\u6210\u5458\u53D8\u91CF\u3001\u5C40\u90E8\u53D8\u91CF\u90FD\u7EDF\u4E00\u4F7F\u7528 lowerCamelCase \u98CE \u683C\uFF0C\u5FC5\u987B\u9075\u4ECE\u9A7C\u5CF0\u5F62\u5F0F")],-1),Z=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[s("localValue "),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token function"},"getHttpMessage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(` inputUserId
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),nn=n("h3",{id:"\u65B9\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65B9\u6CD5","aria-hidden":"true"},"#"),s(" \u65B9\u6CD5")],-1),sn=n("ul",null,[n("li",null,"\u5176\u4E2D method \u65B9\u6CD5\u547D\u540D\u5FC5\u987B\u662F \u52A8\u8BCD \u6216\u8005 \u52A8\u8BCD+\u540D\u8BCD \u5F62\u5F0F")],-1),an=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[s("saveShopCarData "),n("span",{class:"token operator"},"/"),s(` openShopCarInfoDialog
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),pn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[s("save "),n("span",{class:"token operator"},"/"),s(" open "),n("span",{class:"token operator"},"/"),s(" show "),n("span",{class:"token operator"},"/"),s(` go
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),en=l(`<ul><li>\u7279\u6B64\u8BF4\u660E\uFF0C\u589E\u5220\u67E5\u6539\uFF0C\u8BE6\u60C5\u7EDF\u4E00\u4F7F\u7528\u5982\u4E0B 5 \u4E2A\u5355\u8BCD\uFF0C\u4E0D\u5F97\u4F7F\u7528\u5176\u4ED6\uFF08\u76EE\u7684\u662F\u4E3A\u4E86\u7EDF\u4E00\u5404\u4E2A\u7AEF\uFF09</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>\u9644\uFF1A \u51FD\u6570\u65B9\u6CD5\u5E38\u7528\u7684\u52A8\u8BCD<span class="token operator">:</span>
get \u83B7\u53D6/set \u8BBE\u7F6E<span class="token punctuation">,</span>
add \u589E\u52A0/remove \u5220\u9664<span class="token punctuation">,</span>
create \u521B\u5EFA/destory \u9500\u6BC1<span class="token punctuation">,</span>
start \u542F\u52A8/stop \u505C\u6B62<span class="token punctuation">,</span>
open \u6253\u5F00/close \u5173\u95ED<span class="token punctuation">,</span>
read \u8BFB\u53D6/write \u5199\u5165<span class="token punctuation">,</span>
load \u8F7D\u5165/save \u4FDD\u5B58<span class="token punctuation">,</span>
begin \u5F00\u59CB/end \u7ED3\u675F<span class="token punctuation">,</span> backup \u5907\u4EFD/restore \u6062\u590D<span class="token punctuation">,</span> import \u5BFC\u5165/export \u5BFC\u51FA<span class="token punctuation">,</span>
split \u5206\u5272/merge \u5408\u5E76
inject \u6CE8\u5165/extract \u63D0\u53D6<span class="token punctuation">,</span>
attach \u9644\u7740/detach \u8131\u79BB<span class="token punctuation">,</span>
bind \u7ED1\u5B9A/separate \u5206\u79BB<span class="token punctuation">,</span>
view \u67E5\u770B/browse \u6D4F\u89C8<span class="token punctuation">,</span>
edit \u7F16\u8F91/modify \u4FEE\u6539<span class="token punctuation">,</span>
select \u9009\u53D6/mark \u6807\u8BB0<span class="token punctuation">,</span>
copy \u590D\u5236/paste \u7C98\u8D34<span class="token punctuation">,</span>
undo \u64A4\u9500/redo \u91CD\u505A<span class="token punctuation">,</span>
insert \u63D2\u5165/delete \u79FB\u9664<span class="token punctuation">,</span>
add \u52A0\u5165/append \u6DFB\u52A0<span class="token punctuation">,</span>
clean \u6E05\u7406/clear \u6E05\u9664<span class="token punctuation">,</span>
index \u7D22\u5F15/sort \u6392\u5E8F<span class="token punctuation">,</span>
find \u67E5\u627E/search \u641C\u7D22<span class="token punctuation">,</span>
increase \u589E\u52A0/decrease \u51CF\u5C11<span class="token punctuation">,</span>
play \u64AD\u653E/pause \u6682\u505C<span class="token punctuation">,</span>
launch \u542F\u52A8/run \u8FD0\u884C<span class="token punctuation">,</span>
compile \u7F16\u8BD1/execute \u6267\u884C<span class="token punctuation">,</span>
debug \u8C03\u8BD5/trace \u8DDF\u8E2A<span class="token punctuation">,</span>
observe \u89C2\u5BDF/listen \u76D1\u542C<span class="token punctuation">,</span>
build \u6784\u5EFA/publish \u53D1\u5E03<span class="token punctuation">,</span>
input \u8F93\u5165/output \u8F93\u51FA<span class="token punctuation">,</span>
encode \u7F16\u7801/decode \u89E3\u7801<span class="token punctuation">,</span>
encrypt \u52A0\u5BC6/decrypt \u89E3\u5BC6<span class="token punctuation">,</span>
compress \u538B\u7F29/decompress \u89E3\u538B\u7F29<span class="token punctuation">,</span>
pack \u6253\u5305/unpack \u89E3\u5305<span class="token punctuation">,</span>
parse \u89E3\u6790/emit \u751F\u6210<span class="token punctuation">,</span>
connect \u8FDE\u63A5/disconnect \u65AD\u5F00<span class="token punctuation">,</span>
send \u53D1\u9001/receive \u63A5\u6536<span class="token punctuation">,</span>
download \u4E0B\u8F7D/upload \u4E0A\u4F20<span class="token punctuation">,</span>
refresh \u5237\u65B0/synchronize \u540C\u6B65<span class="token punctuation">,</span>
update \u66F4\u65B0/revert \u590D\u539F<span class="token punctuation">,</span>
lock \u9501\u5B9A/unlock \u89E3\u9501<span class="token punctuation">,</span>
check out \u7B7E\u51FA/check in \u7B7E\u5165<span class="token punctuation">,</span>
submit \u63D0\u4EA4/commit \u4EA4\u4ED8<span class="token punctuation">,</span>
push \u63A8/pull \u62C9<span class="token punctuation">,</span>
expand \u5C55\u5F00/collapse \u6298\u53E0<span class="token punctuation">,</span>
enter \u8FDB\u5165/exit \u9000\u51FA<span class="token punctuation">,</span>
abort \u653E\u5F03/quit \u79BB\u5F00<span class="token punctuation">,</span>
obsolete \u5E9F\u5F03/depreciate \u5E9F\u65E7<span class="token punctuation">,</span>
collect \u6536\u96C6/aggregate \u805A\u96C6
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><ol start="3"><li>\u5E38\u91CF\u547D\u540D\u5168\u90E8\u5927\u5199\uFF0C\u5355\u8BCD\u95F4\u7528\u4E0B\u5212\u7EBF\u9694\u5F00\uFF0C\u529B\u6C42\u8BED\u4E49\u8868\u8FBE\u5B8C\u6574\u6E05\u695A\uFF0C \u4E0D\u8981\u5ACC\u540D\u5B57\u957F</li></ol>`,3),tn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token constant"},"MAX_STOCK_COUNT"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),on=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token constant"},"MAX_COUNT"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),cn=n("h2",{id:"\u4EE3\u7801\u683C\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4EE3\u7801\u683C\u5F0F","aria-hidden":"true"},"#"),s(" \u4EE3\u7801\u683C\u5F0F")],-1),ln=n("ol",null,[n("li",null,"\u4F7F\u7528 2 \u4E2A\u7A7A\u683C\u8FDB\u884C\u7F29\u8FDB")],-1),un=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"<"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  x `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"10"),s(`
`),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
  x `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br")])],-1),rn=n("ol",{start:"2"},[n("li",null,"\u4E0D\u540C\u903B\u8F91\u3001\u4E0D\u540C\u8BED\u4E49\u3001\u4E0D\u540C\u4E1A\u52A1\u7684\u4EE3\u7801\u4E4B\u95F4\u63D2\u5165\u4E00\u4E2A\u7A7A\u884C\u5206\u9694\u5F00\u6765\u4EE5 \u63D0\u5347\u53EF\u8BFB\u6027")],-1),kn=n("ul",null,[n("li",null,"\u8BF4\u660E\uFF1A\u4EFB\u4F55\u60C5\u5F62\uFF0C\u6CA1\u6709\u5FC5\u8981\u63D2\u5165\u591A\u4E2A\u7A7A\u884C\u8FDB\u884C\u9694\u5F00\u3002")],-1),bn=n("h2",{id:"\u5B57\u7B26\u4E32-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B57\u7B26\u4E32-1","aria-hidden":"true"},"#"),s(" \u5B57\u7B26\u4E32")],-1),mn=n("ul",null,[n("li",null,"\u7EDF\u4E00\u4F7F\u7528\u5355\u5F15\u53F7(\u2018)\uFF0C\u4E0D\u4F7F\u7528\u53CC\u5F15\u53F7(\u201C)\u3002\u8FD9\u5728\u521B\u5EFA HTML \u5B57\u7B26\u4E32\u975E\u5E38\u6709\u597D\u5904\uFF1A")],-1),dn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"let"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"foo"'),s(`
`),n("span",{class:"token keyword"},"let"),s(" testDiv "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},`'<div id="test"></div>'`),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br")])],-1),gn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"let"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"foo"'),s(`
`),n("span",{class:"token keyword"},"let"),s(" testDiv "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},`"<div id='test'></div>"`),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br")])],-1),vn=n("h2",{id:"\u5BF9\u8C61\u58F0\u660E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5BF9\u8C61\u58F0\u660E","aria-hidden":"true"},"#"),s(" \u5BF9\u8C61\u58F0\u660E")],-1),yn=n("ol",null,[n("li",null,"\u4F7F\u7528\u5B57\u9762\u503C\u521B\u5EFA\u5BF9\u8C61")],-1),fn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"let"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),hn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"let"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Object"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),wn=n("ol",{start:"2"},[n("li",null,"\u4F7F\u7528\u5B57\u9762\u91CF\u6765\u4EE3\u66FF\u5BF9\u8C61\u6784\u9020\u5668")],-1),jn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"var"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"city"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"3"),s(),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),_n=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"var"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Object"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
user`),n("span",{class:"token punctuation"},"."),s("age "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
user`),n("span",{class:"token punctuation"},"."),s("name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
user`),n("span",{class:"token punctuation"},"."),s("city "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br")])],-1),xn=n("h2",{id:"\u4F7F\u7528-es6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F7F\u7528-es6","aria-hidden":"true"},"#"),s(" \u4F7F\u7528 ES6+")],-1),Nn=n("ul",null,[n("li",null,"\u5FC5\u987B\u4F18\u5148\u4F7F\u7528 ES6+ \u4E2D\u65B0\u589E\u7684\u8BED\u6CD5\u7CD6\u548C\u51FD\u6570\u3002\u8FD9\u5C06\u7B80\u5316\u4F60\u7684\u7A0B\u5E8F\uFF0C\u5E76\u8BA9\u4F60\u7684\u4EE3\u7801\u66F4\u52A0\u7075\u6D3B\u548C\u53EF\u590D \u7528\u3002\u6BD4\u5982\u7BAD\u5934\u51FD\u6570\u3001await/async \uFF0C \u89E3\u6784\uFF0C let \uFF0C for\u2026of \u7B49\u7B49\u3002")],-1),Pn=n("h2",{id:"\u62EC\u53F7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u62EC\u53F7","aria-hidden":"true"},"#"),s(" \u62EC\u53F7")],-1),In=n("p",null,"*\u4E0B\u5217\u5173\u952E\u5B57\u540E\u5FC5\u987B\u6709\u5927\u62EC\u53F7\uFF08\u5373\u4F7F\u4EE3\u7801\u5757\u7684\u5185\u5BB9\u53EA\u6709\u4E00\u884C\uFF09 *\uFF1Aif, else, for, while, do, switch, try, catch, finally, with\u3002",-1),Tn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("condition"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token function"},"doSomething"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),An=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("condition"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token function"},"doSomething"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),On=n("h2",{id:"undefined-\u5224\u65AD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#undefined-\u5224\u65AD","aria-hidden":"true"},"#"),s(" undefined \u5224\u65AD")],-1),qn=n("ul",null,[n("li",null,"\u6C38\u8FDC\u4E0D\u8981\u76F4\u63A5\u4F7F\u7528 undefined \u8FDB\u884C\u53D8\u91CF\u5224\u65AD\uFF1B\u4F7F\u7528 typeof \u548C\u5B57\u7B26\u4E32\u2019undefined\u2019\u5BF9\u53D8\u91CF\u8FDB\u884C\u5224\u65AD\u3002")],-1),En=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" person "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'undefined'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token operator"},"..."),s(),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),Sn=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("person "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token keyword"},"undefined"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token operator"},"..."),s(),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br")])],-1),Cn=l('<h2 id="\u6761\u4EF6\u5224\u65AD\u548C\u5FAA\u73AF\u6700\u591A\u4E09\u5C42" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u5224\u65AD\u548C\u5FAA\u73AF\u6700\u591A\u4E09\u5C42" aria-hidden="true">#</a> \u6761\u4EF6\u5224\u65AD\u548C\u5FAA\u73AF\u6700\u591A\u4E09\u5C42</h2><ul><li>\u6761\u4EF6\u5224\u65AD\u80FD\u4F7F\u7528\u4E09\u76EE\u8FD0\u7B97\u7B26\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\u89E3\u51B3\u7684\uFF0C\u5C31\u4E0D\u8981\u4F7F\u7528\u6761\u4EF6\u5224\u65AD\uFF0C\u4F46\u662F\u8C28\u8BB0\u4E0D\u8981\u5199\u592A\u957F\u7684 \u4E09\u76EE\u8FD0\u7B97\u7B26\u3002</li><li>\u5982\u679C\u8D85\u8FC7 3 \u5C42\u8BF7\u62BD\u6210\u51FD\u6570\uFF0C\u5E76\u5199\u6E05\u695A\u6CE8\u91CA\u3002</li></ul><h2 id="this-\u7684\u8F6C\u6362\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#this-\u7684\u8F6C\u6362\u547D\u540D" aria-hidden="true">#</a> this \u7684\u8F6C\u6362\u547D\u540D</h2><ul><li>\u5BF9\u4E0A\u4E0B\u6587 this \u7684\u5F15\u7528\u53EA\u80FD\u4F7F\u7528 \u2019self\u2019 \u6765\u547D\u540D\u3002</li></ul><h2 id="\u614E\u7528-console-log" tabindex="-1"><a class="header-anchor" href="#\u614E\u7528-console-log" aria-hidden="true">#</a> \u614E\u7528 console.log</h2><ul><li>\u56E0 console.log \u5927\u91CF\u4F7F\u7528\u4F1A\u6709\u6027\u80FD\u95EE\u9898\uFF0C\u6240\u4EE5\u5728\u975E webpack \u9879\u76EE\u4E2D\u8C28\u614E\u4F7F\u7528 log \u529F\u80FD\u3002</li></ul>',6);function Fn(Dn,Bn){const e=c("RouterLink"),t=c("CodeGroupItem"),o=c("CodeGroup");return u(),r(i,null,[m,d,g,n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#\u7C7B\u578B"},{default:p(()=>[y]),_:1})]),n("li",null,[a(e,{to:"#\u5F15\u7528"},{default:p(()=>[f]),_:1})]),n("li",null,[a(e,{to:"#\u5BF9\u8C61"},{default:p(()=>[h]),_:1})]),n("li",null,[a(e,{to:"#\u6570\u7EC4"},{default:p(()=>[w]),_:1})]),n("li",null,[a(e,{to:"#\u89E3\u6784\u8D4B\u503C"},{default:p(()=>[j]),_:1})]),n("li",null,[a(e,{to:"#\u5B57\u7B26\u4E32"},{default:p(()=>[_]),_:1})]),n("li",null,[a(e,{to:"#\u51FD\u6570"},{default:p(()=>[x]),_:1})]),n("li",null,[a(e,{to:"#\u7BAD\u5934\u51FD\u6570"},{default:p(()=>[N]),_:1})]),n("li",null,[a(e,{to:"#\u539F\u56E0-\u5B83\u5C06\u521B\u5EFA\u5728-this-\u4E0A\u4E0B\u6587\u4E2D\u6267\u884C\u7684\u51FD\u6570\u7248\u672C-\u901A\u5E38\u662F\u60A8\u60F3\u8981\u7684-\u5E76\u4E14\u8BED\u6CD5\u66F4\u7B80\u6D01"},{default:p(()=>[P]),_:1})]),n("li",null,[a(e,{to:"#\u7C7B-\u6784\u9020\u51FD\u6570"},{default:p(()=>[I]),_:1})]),n("li",null,[a(e,{to:"#\u6A21\u5757"},{default:p(()=>[T]),_:1})]),n("li",null,[a(e,{to:"#\u8FED\u4EE3\u5668"},{default:p(()=>[A]),_:1})]),n("li",null,[a(e,{to:"#\u751F\u6210\u5668"},{default:p(()=>[O]),_:1})]),n("li",null,[a(e,{to:"#\u5BF9\u8C61\u5C5E\u6027"},{default:p(()=>[q]),_:1})]),n("li",null,[a(e,{to:"#\u53D8\u91CF\u58F0\u660E"},{default:p(()=>[E]),_:1})]),n("li",null,[a(e,{to:"#hoisting"},{default:p(()=>[S]),_:1})]),n("li",null,[a(e,{to:"#\u6BD4\u8F83\u8FD0\u7B97\u7B26-\u76F8\u7B49"},{default:p(()=>[C]),_:1})]),n("li",null,[a(e,{to:"#\u5206\u53F7"},{default:p(()=>[F]),_:1})]),n("li",null,[a(e,{to:"#\u6807\u51C6\u7279\u6027"},{default:p(()=>[D]),_:1})]),n("li",null,[a(e,{to:"#eval"},{default:p(()=>[B]),_:1})]),n("li",null,[a(e,{to:"#\u4FEE\u6539\u5185\u7F6E\u5BF9\u8C61\u7684\u539F\u578B"},{default:p(()=>[R]),_:1})]),n("li",null,[a(e,{to:"#\u547D\u540D"},{default:p(()=>[U]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#\u65B9\u6CD5"},{default:p(()=>[$]),_:1})])])]),n("li",null,[a(e,{to:"#\u4EE3\u7801\u683C\u5F0F"},{default:p(()=>[M]),_:1})]),n("li",null,[a(e,{to:"#\u5B57\u7B26\u4E32-1"},{default:p(()=>[J]),_:1})]),n("li",null,[a(e,{to:"#\u5BF9\u8C61\u58F0\u660E"},{default:p(()=>[L]),_:1})]),n("li",null,[a(e,{to:"#\u4F7F\u7528-es6"},{default:p(()=>[Q]),_:1})]),n("li",null,[a(e,{to:"#\u62EC\u53F7"},{default:p(()=>[V]),_:1})]),n("li",null,[a(e,{to:"#undefined-\u5224\u65AD"},{default:p(()=>[z]),_:1})]),n("li",null,[a(e,{to:"#\u6761\u4EF6\u5224\u65AD\u548C\u5FAA\u73AF\u6700\u591A\u4E09\u5C42"},{default:p(()=>[H]),_:1})]),n("li",null,[a(e,{to:"#this-\u7684\u8F6C\u6362\u547D\u540D"},{default:p(()=>[W]),_:1})]),n("li",null,[a(e,{to:"#\u614E\u7528-console-log"},{default:p(()=>[X]),_:1})])])]),G,a(o,null,{default:p(()=>[a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[K]),_:1})]),_:1}),Y,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[Z]),_:1})]),_:1}),nn,sn,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[an]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[pn]),_:1})]),_:1}),en,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[tn]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[on]),_:1})]),_:1}),cn,ln,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[un]),_:1})]),_:1}),rn,kn,bn,mn,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[dn]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[gn]),_:1})]),_:1}),vn,yn,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[fn]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[hn]),_:1})]),_:1}),wn,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[jn]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[_n]),_:1})]),_:1}),xn,Nn,Pn,In,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[Tn]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[An]),_:1})]),_:1}),On,qn,a(o,null,{default:p(()=>[a(t,{title:"\u6B63\u4F8B"},{default:p(()=>[En]),_:1}),a(t,{title:"\u53CD\u4F8B"},{default:p(()=>[Sn]),_:1})]),_:1}),Cn],64)}var $n=k(b,[["render",Fn]]);export{$n as default};
